(undo-tree-save-format-version . 1)
"4821ed76b300199fd7ee699c2c01cc2da6b6b017"
[nil nil nil nil (25173 43500 103918 0) 0 nil]
([nil nil ((1449 . 1458) (t 25125 32978 938234 895000)) nil (25173 43500 103917 0) 0 nil])
([nil nil ((1458 . 1461)) nil (25173 43500 103916 0) 0 nil])
([nil nil ((1461 . 1462)) nil (25173 43500 103916 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 1461) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 1462) nil (25173 43500 103915 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -1458) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1459) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -1460) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 1461) nil (25173 43500 103913 0) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1493 1493 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 1493 1493 nil nil nil nil nil) nil nil)) (1482 . 1490) (1458 . 1487)) nil (25173 43500 103904 0) 0 nil])
([nil nil ((apply yas--snippet-revive 1458 1495 #s(yas--snippet nil (#s(yas--field 1 1493 1493 nil nil nil nil nil)) nil 0 nil #s(yas--field 1 1493 1493 nil nil nil nil nil) nil nil))) nil (25173 43500 103904 0) 0 nil])
([nil nil ((1493 . 1509) (#(")" 0 1 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . 1493)) nil (25173 43500 103903 0) 0 nil])
([nil nil ((#("ic(query[0].amount)" 0 2 (fontified t ws-butler-chg chg) 2 3 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face)) 3 8 (fontified t ws-butler-chg chg) 8 9 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 9 10 (fontified t ws-butler-chg chg face py-number-face) 10 11 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-2-face)) 11 18 (fontified t ws-butler-chg chg) 18 19 (fontified t ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . 1490) (undo-tree-id88 . -3) (undo-tree-id89 . -19) (undo-tree-id90 . -3) (undo-tree-id91 . -19) (undo-tree-id92 . -19) (undo-tree-id93 . -19) (undo-tree-id94 . -19) (undo-tree-id95 . -19) (undo-tree-id96 . -19) (undo-tree-id97 . -19) (undo-tree-id98 . -19) (undo-tree-id99 . -19) (undo-tree-id100 . -19) (undo-tree-id101 . -19) (undo-tree-id102 . -19) (undo-tree-id103 . -19) (undo-tree-id104 . -19) (undo-tree-id105 . -19) (undo-tree-id106 . -19) (undo-tree-id107 . -19) (undo-tree-id108 . -19) (undo-tree-id109 . -19) (undo-tree-id110 . -19) (undo-tree-id111 . -19) (undo-tree-id112 . -19) (undo-tree-id113 . -19) (undo-tree-id114 . -19) (undo-tree-id115 . -19) (undo-tree-id116 . -19) (undo-tree-id117 . -19) (undo-tree-id118 . -19) (undo-tree-id119 . -19) (undo-tree-id120 . -19) (undo-tree-id121 . -19) (undo-tree-id122 . -19) (undo-tree-id123 . -19) (undo-tree-id124 . -19) (undo-tree-id125 . -19) (undo-tree-id126 . -19) (undo-tree-id127 . -19) (undo-tree-id128 . -19) (undo-tree-id129 . -19) (undo-tree-id130 . -19) (undo-tree-id131 . -19) (undo-tree-id132 . -19) (undo-tree-id133 . -19) (undo-tree-id134 . -19) (undo-tree-id135 . -19) (undo-tree-id136 . -19) (undo-tree-id137 . -19) (undo-tree-id138 . -19)) nil (25173 43500 103901 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t ws-butler-chg chg)) . 1482) (undo-tree-id0 . -8) (undo-tree-id1 . -8) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) 1500) nil (25173 43500 103865 0) 0 nil])
([nil nil ((1784 . 1793) (t 25173 43500 106053 414000)) nil (25173 43563 207238 0) 0 nil])
([nil nil ((1793 . 1796)) nil (25173 43563 207238 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -1793) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -1794) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -1795) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) 1796) nil (25173 43563 207237 0) 0 nil])
([nil nil ((1793 . 1796)) nil (25173 43563 207229 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -1793) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -1794) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -1795) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 1796) nil (25173 43563 207228 0) 0 nil])
([nil nil ((463 . 464)) nil (25173 43563 207224 0) 0 nil])
([nil nil ((464 . 492)) nil (25173 43563 207223 0) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg)) . -485) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -486) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -487) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("L" 0 1 (fontified t ws-butler-chg chg)) . -488) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -489) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -490) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -491) (undo-tree-id452 . -1) (undo-tree-id453 . -1) 492) nil (25173 43563 207222 0) 0 nil])
([nil nil ((485 . 487)) nil (25173 43563 207213 0) 0 nil])
([nil nil ((485 . 502) (#("To" 0 2 (fontified nil ws-butler-chg chg)) . -485) (485 . 487) (#("TokenProfile_usdc" 0 17 (fontified nil ws-butler-chg chg)) . -485) (485 . 502) (#("To" 0 2 (fontified t ws-butler-chg chg)) . -485) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -1) (undo-tree-id325 . -2) (undo-tree-id326 . -1) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) 487) nil (25173 43563 207210 0) 0 nil])
([nil nil ((#("from db_tables import TokenProfile_usdc" 0 1 (fontified t ws-butler-chg chg face py-import-from-face) 1 4 (fontified t ws-butler-chg chg face py-import-from-face) 4 15 (fontified t ws-butler-chg chg) 15 21 (fontified t ws-butler-chg chg face py-import-from-face) 21 22 (fontified t ws-butler-chg chg) 22 39 (fontified t ws-butler-chg chg)) . 463) (undo-tree-id156 . -22) (undo-tree-id157 . -22) (undo-tree-id158 . -22) (undo-tree-id159 . -22) (undo-tree-id160 . -22) (undo-tree-id161 . -22) (undo-tree-id162 . -22) (undo-tree-id163 . -22) (undo-tree-id164 . -22) (undo-tree-id165 . -22) (undo-tree-id166 . -22) (undo-tree-id167 . -22) (undo-tree-id168 . -22) (undo-tree-id169 . -22) (undo-tree-id170 . -22) (undo-tree-id171 . -22) (undo-tree-id172 . -22) (undo-tree-id173 . -22) (undo-tree-id174 . -22) (undo-tree-id175 . -22) (undo-tree-id176 . -22) (undo-tree-id177 . -22) (undo-tree-id178 . -22) (undo-tree-id179 . -22) (undo-tree-id180 . -22) (undo-tree-id181 . -22) (undo-tree-id182 . -22) (undo-tree-id183 . -22) (undo-tree-id184 . -22) (undo-tree-id185 . -22) (undo-tree-id186 . -22) (undo-tree-id187 . -22) (undo-tree-id188 . -22) (undo-tree-id189 . -22) (undo-tree-id190 . -22) (undo-tree-id191 . -22) (undo-tree-id192 . -22) (undo-tree-id193 . -22) (undo-tree-id194 . -22) (undo-tree-id195 . -22) (undo-tree-id196 . -22) (undo-tree-id197 . -22) (undo-tree-id198 . -22) (undo-tree-id199 . -22) (undo-tree-id200 . -22) (undo-tree-id201 . -22) (undo-tree-id202 . -22) (undo-tree-id203 . -22) (undo-tree-id204 . -22) (undo-tree-id205 . -22) (undo-tree-id206 . -22) (undo-tree-id207 . -22) (undo-tree-id208 . -22) (undo-tree-id209 . -22) (undo-tree-id210 . -22) (undo-tree-id211 . -22) (undo-tree-id212 . -22) (undo-tree-id213 . -22) (undo-tree-id214 . -22) (undo-tree-id215 . -22) (undo-tree-id216 . -22) (undo-tree-id217 . -22) (undo-tree-id218 . -22) (undo-tree-id219 . -22) (undo-tree-id220 . -22) (undo-tree-id221 . -22) (undo-tree-id222 . -22) (undo-tree-id223 . -22) (undo-tree-id224 . -22) (undo-tree-id225 . -22) (undo-tree-id226 . -22) (undo-tree-id227 . -22) (undo-tree-id228 . -22) (undo-tree-id229 . -22) (undo-tree-id230 . -22) (undo-tree-id231 . -22) (undo-tree-id232 . -22) (undo-tree-id233 . -22) (undo-tree-id234 . -22) (undo-tree-id235 . -22) (undo-tree-id236 . -22) (undo-tree-id237 . -22) (undo-tree-id238 . -22) (undo-tree-id239 . -22) (undo-tree-id240 . -22) (undo-tree-id241 . -22) (undo-tree-id242 . -22) (undo-tree-id243 . -22) (undo-tree-id244 . -22) (undo-tree-id245 . -22) (undo-tree-id246 . -22) (undo-tree-id247 . -22) (undo-tree-id248 . -22) (undo-tree-id249 . -22) (undo-tree-id250 . -22) (undo-tree-id251 . -22) (undo-tree-id252 . -22) (undo-tree-id253 . -22) (undo-tree-id254 . -22) (undo-tree-id255 . -22) (undo-tree-id256 . -22) (undo-tree-id257 . -22) (undo-tree-id258 . -22) (undo-tree-id259 . -22) (undo-tree-id260 . -22) (undo-tree-id261 . -22) (undo-tree-id262 . -22) (undo-tree-id263 . -22) (undo-tree-id264 . -22) (undo-tree-id265 . -22) (undo-tree-id266 . -22) (undo-tree-id267 . -22) (undo-tree-id268 . -22) (undo-tree-id269 . -22) (undo-tree-id270 . -22) (undo-tree-id271 . -22) (undo-tree-id272 . -39) (undo-tree-id273 . -39) (undo-tree-id274 . -22) (undo-tree-id275 . -39) (undo-tree-id276 . -39) (undo-tree-id277 . -39) (undo-tree-id278 . -39) (undo-tree-id279 . -39) (undo-tree-id280 . -39) (undo-tree-id281 . -39) (undo-tree-id282 . -39) (undo-tree-id283 . -39) (undo-tree-id284 . -39) (undo-tree-id285 . -39) (undo-tree-id286 . -39) (undo-tree-id287 . -39) (undo-tree-id288 . -39) (undo-tree-id289 . -39) (undo-tree-id290 . -39) (undo-tree-id291 . -39) (undo-tree-id292 . -39) (undo-tree-id293 . -39) (undo-tree-id294 . -39) (undo-tree-id295 . -39) (undo-tree-id296 . -39) (undo-tree-id297 . -39) (undo-tree-id298 . -39) (undo-tree-id299 . -39) (undo-tree-id300 . -39) (undo-tree-id301 . -39) (undo-tree-id302 . -39) (undo-tree-id303 . -39) (undo-tree-id304 . -39) (undo-tree-id305 . -39) (undo-tree-id306 . -39) (undo-tree-id307 . -39) (undo-tree-id308 . -39) (undo-tree-id309 . -39) (undo-tree-id310 . -39) (undo-tree-id311 . -39) (undo-tree-id312 . -39) (undo-tree-id313 . -39) (undo-tree-id314 . -39) (undo-tree-id315 . -39) (undo-tree-id316 . -39) (undo-tree-id317 . -39) (undo-tree-id318 . -39) (undo-tree-id319 . -39) (undo-tree-id320 . -39) (undo-tree-id321 . -39)) nil (25173 43563 207153 0) 0 nil])
([nil current ((#("        " 0 8 (ws-butler-chg chg fontified t)) . 1785) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) 463) nil (25173 43563 207079 0) 0 nil])
nil
